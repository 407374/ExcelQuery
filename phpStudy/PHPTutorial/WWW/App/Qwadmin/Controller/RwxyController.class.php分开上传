<?php
/**
*
* 版权所有：恰维网络<qwadmin.qiawei.com>
* 作    者：寒川<hanchuan@qiawei.com>
* 日    期：2016-01-20
* 版    本：1.0.0
* 功能说明：用户控制器。
*
**/
// namespace Qwadmin\Controller;
// use Think\Controller;
// class RwxyController extends Controller{
namespace Qwadmin\Controller;
use Common\Controller\BaseController;
use Think\Controller;
class RwxyController extends BaseController{
public function index(){
    $url=U($Think.CONTROLLER_NAME."/uniquerydata");
        header("Location: $url");
}




public function excel___________() {
}
    


// 通用查询
public function echounisheet($dbsheetname,$data){
// C('EXCELSECRETSHEET');
$con2=$this->constr2conarr($data,'eq');
$likecon=$this->constr2conarr($data,'like');
echo 343;pr($likecon);
// pr($con2);
if($this->isadmin($con2)){
    unset($con2['rpw']);
    $this->echounisheetuni($dbsheetname,$con2,$likecon);
}elseif(!empty($likecon['sheetname']['0'] == 'in')){
    $this->echounisheetuni($dbsheetname,$con2,$likecon);
}elseif(empty($con2['sheetname']) || empty($con2['rpw'])){
    echo    $output="error, \nsheetname \n  or\n rpw\nis \nempty.\n";    
}else{
    
    $this->echounisheetuni($dbsheetname,$con2,$likecon);

}    


    
}

// 通用查询
public function echounisheetuni($dbsheetname,$con2,$likecon){
$db=M($dbsheetname);
    // pr($con2);
    // pr($likecon);

   
// 去除一些无关的条件
unset($con2['conall']);
unset($con2['wrpw']);  
unset($con2['user']); 
unset($likecon['conall']);
unset($likecon['wrpw']);  
unset($likecon['user']); 
  
$ordstr=empty($con2['orderkey'])?"id":$con2['orderkey'];

echo 11;pr($con2);
echo 23;pr($likecon);
    // 这里计算字段
    if(!empty($con2['notfield'])){
        $todel=explode(',',$con2['notfield']);
        unset($con2['notfield']);
    }
    $Model = new \Think\Model(); // 实例化一个model对象 没有对应任何数据表

    $field=$Model->query("select COLUMN_NAME from information_schema.COLUMNS where table_name ='".C('DB_PREFIX').$dbsheetname."' and table_schema = '".C('DB_NAME')."';");
    
    $t1[]='wrpw';
    $field=array_column($field,'column_name');
    $field=array_diff($field,$t1);
    $field=array_diff($field,$todel);
    $fieldstr=implode($field,',');
    // pr($fieldstr);
    if(!empty($con2['field'])){
        $fieldstr=$con2['field'];
        unset($con2['field']);
    }
    // pr($con2);

    // 查出第一行    
    // $queryfirst=$db->where($con2)->where($likecon)->order('id desc')->find(); 
    $sheetcon['sheetname']=$con2['sheetname'];
    $queryfirst=$db->where($sheetcon)->order('id')->find();    

//  pr($mysheetname);
// $likecontemp['sheetname']=array('like','学生信息测试');
    $notfirstline['id']=array('NEQ',$queryfirst['id']);
    // pr($ordstr);
    $query=$db->where($con2)->where($likecon)->where($notfirstline)->field($fieldstr)->order($ordstr)->select(); 
// $query=$db->where($likecontemp)->select(); 
    // $query=$db->where($con2)->select();
    // pr($queryfirst);
    // pr($query);
    
    // 插入字段行
    $fieldline['0']=$field;
    // 插入空行
    foreach ($field as $fieldkey) {
        $emptyline['0'][$fieldkey]="";
    }

// pr($queryfirst);
    if(!empty($queryfirst)){
        $sheetcon['sheetname']=$queryfirst['sheetname'];
        $firstlinearrtemp=$db->where($sheetcon)->field($fieldstr)->order('id')->find();
        $firstline['0']=$firstlinearrtemp;
        

  
    $temp=twoarraymerge($fieldline,$emptyline); 
    if(!empty($firstline)){
        $temp=twoarraymerge($temp,$firstline);  
    }
    $query=twoarraymerge($temp,$query);         
    }
    // pr($query);


    // // 输出结果
    $output=$this->simpletable($query); 
        if(count($query) < 4){
            echo    $output="error, \nnothing \nis \nfound. \n";
        }else{
            echo $output;           
        }        
}

// 查询数据私有的数据表
public function echoteacherdb(){
$data=I('get.');
    $ip = $_SERVER['REMOTE_ADDR'];
    $ip_config=json_decode(C('IPCONFIG'),true);
    $result = IpAuth($ip, $ip_config);
    if(!$result){
        echo "error\n,IP地址\n不在可访问列表中，\n禁止访问。";
    }else{

// $sheetname=C('EXCELSECRETSHEET');
$dbsheetname=C('EXCELSECRETSHEET');
$this->echounisheet($dbsheetname,$data);    
        
    }


}
// 查询数据公开的数据表
public function echopubdb(){
$data=I('get.');
$sheetname=C('EXCELPUBSHEET');
$this->echounisheet($sheetname,$data);

}


function isadmin($con) {
    $flag=false;
    $admincon['user']=$con['user'];
    $admincon['password']=password($con['wrpw']);
    if(!empty($admincon['user']) && !empty($admincon['password']) ){
        $adminarr=M('member')->where($admincon)->find();
        if($adminarr['uid']==1){
            // 是管理员
            // unset($con['rpw']);
            $flag=ture;
        }
    }

    return $flag;
}


public function constr2conarr($data,$type='eq') {
foreach($data as $key=>$value){
        if(!empty($value)){
            $con2[$key]=characettouft8(unicode_to_utf8($value));
        }
    }

$conall=explode(";",$con2['conall']);
// pr($conall);
foreach($conall as $value){
    $ex='';
    // echo 'valuse';pr($value);
    // echo '大于等1';pr(strstr($value,"大于等1"));
   if(!empty($value)){
       if(strstr($value,"等于")){
           $ex=explode('等于',$value);
           if(count($ex)==2){
               $con2[$ex['0']]=$ex['1'];
           }else{$result="不是一个等号";}
       }elseif(strstr($value,"包含")){
           $ex=explode('包含',$value);
        //   pr($ex);
           if(count($ex)==2){
               $likecon[$ex['0']]=array('LIKE',"%".$ex['1']."%");;
           }else{$result="不是一个包含";}
       }elseif(strstr($value,"IN")){
           $ex=explode('IN',$value);
        //   pr($ex);
           if(count($ex)==2){
               $likecon[$ex['0']]=array('in',$ex['1']);;
           }else{$result="不是一个包含";}
       }
    //   elseif(strstr($value,"大于等")){
    //       $ex=explode('大于等',$value);
          
    //       if(count($ex)==2){
    //           $likecon[$ex['0']]=array('EGT',$ex['1']);;
    //       }else{$result="不是一个>=";}
    //   }elseif(strstr($value,"小于等")){
    //       $ex=explode('小于等',$value);
    //     //   pr($ex);
    //       if(count($ex)==2){
    //           $likecon[$ex['0']]=array('ELT',$ex['1']);;
    //       }else{$result="不是一个<=";}
    //   }
   }
}
// pr($con2);

// pr($con2);
$con2=$this->replacechinesekey($con2);
$likecon=$this->replacechinesekey($likecon);
    foreach($con2 as $key=>$value){
        if(empty($value)){
            unset($con2[$key]);
        }
    }
// pr($con2);    
 
// pr($con2);    
if(empty($likecon)){ $likecon['temp']='temp'; }//$likecon的空值处理    
if($type=='eq'){
    return $con2;
}elseif($type=='like'){
    return $likecon;
}else{return "con is error";}

}



public function personaldata(){

$db=M(C('EXCELSECRETSHEET'));
$con['pid']=$this->USER['user'];
pr($this->USER);
$inforesult=R($Think.CONTROLLER_NAME."/conquery",array($db,$con));
$this->assign("inforesult",$inforesult);

    $this->display();    
}


public function replacechinesekey($arr) {
$aa['维护人']='owner';
$aa['负责人']='owner';
$aa['数据表名']='sheetname';
$aa['学号/工号']='pid';
$aa['姓名']='name';
$aa['数据日期']='datatime';
$aa['保留1']='data1';
$aa['保留2']='data2';
$aa['只显字段']='field';
$aa['显示字段']='field';
$aa['不显字段']='notfield';
$aa['用户名']='user';
$aa['查看密码']='rpw';
$aa['上传密码']='wrpw';
$aa['姓名字段']='namekey';
$aa['学号/工号字段']='pidkey';
$aa['学号字段']='pidkey';
$aa['ID字段']='pidkey';
$aa['分类字段']='classkey';
$aa['排序字段']='orderkey';
$aa['缩略显示']='weborder';
foreach ($arr as $keycn=>$v) {
    foreach ($aa as $kval=> $vkey) {
        if($keycn==$kval){
            unset($arr[$keycn]);
            $arr[$vkey]=$v;
        }
    }
}
return $arr;
}  
public function echosheetname() {
// $DBNAME='rwxy';
// $DBSHEET='tzcdata';
$data=I('get.');



$db=M(C('EXCELSECRETSHEET'));
$con2=$this->constr2conarr($data,'eq');

    $query=$db->where($con2)->distinct(true)->field('sheetname')->order('id')->select();

    $output=$this->simpletable($query); 
        if(count($query)<1){
            echo    $output="error, \nnothing \nis \nfound. \n";
        }else{
            echo $output;           
        }    
        
    
}




//   把特殊符号给删除了
public function deltextsymbol($text,$symbol="?"){
// echo mb_substr($text,0,1,"UTF-8");
    if(mb_substr($text,0,1,"UTF-8")==$symbol){
        // echo 'first text is <hr>'.$text;
        $newtext=mb_substr($text,1,NULL,"UTF-8");
        $newtext= $this->deltextsymbol($newtext);
        // echo 'second text is <hr>'.$newtext;
        return $newtext;
    }else{
        // pr($text);
        return $text;
    }  
// str_replace("??","?",$text);
// str_replace(",?",",",$text);
//   return  str_replace(C('TEXTSYMBOL'),"",$text);
}   
 
//   把特殊符号给删除了
public function deltextsymboltwoarray($twoarr){
foreach($twoarr as $k1=>$v1){
    foreach($v1 as $k2=>$v2){
        $v2new=$this->deltextsymbol($v2,"?");
        $v2new=$this->deltextsymbol($v2new,C('TEXTSYMBOL'));
        $twoarrnew[$k1][$k2]=$v2new;
    }
}
return $twoarrnew;
}      
public function u___________() {
}
    






// 这是数值
function isnum($val){
    if($val>100000000000 ){
        return true;
    }else{
        // pr("非文本3");
        return false;         
    }
}



public function checkandprint($arr,$query,$haveright='0'){
// 检测权限 
$pw=$arr['pw'];
if(empty($haveright)){
    if($pw == C('PW')){  
       $haveright=True;
    }else{
       $haveright=False; 
    }      
}
  
// 输出结果
    if($haveright){
        // $output=$this->h5table($query); 
        $output=$this->simpletable($query); 
    }else{
        $output="error, \npassword \nis \nwrong. \n";
    }
    if(count($query)<1){
        $output="error, \nnothing \nis \nfound. \n";
    }    
return $output;     
}


// 二维数组输出简单的表格
public function simpletable($data){
     $temp1='
     <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title></title>
</head>

<body><table class="table table-striped"> <tbody>';
     $firstline='';
foreach ($data as $rows2) {
    foreach ($rows2 as $key2=>$value2) {
        $firstline=$firstline.'<th>'.$key2.'</th>';
    }
        if(!empty($firstline)){
            $firstline='<tr>'.$firstline.'</tr>';
            break;
        }
    
} 

$textsymbol=C('TEXTSYMBOL');
    // pr($firstline);
$temp2='';   
foreach ($data as $rows) {
    $temp22='';
    foreach ($rows as $key=>$value) {
    // $value=$this->deltextsymbol($value); 
        if($this->isnum($value) ){
            $temp22=$temp22
          .'<td>'.$textsymbol.$value.'</td>';       

        }else{
            $temp22=$temp22
          .'<td>'.$value.'</td>';                 
        }
       
    }
    $temp2=$temp2.'<tr>'.$temp22.'</tr>';
}      
$temp3='     </tbody>
</table>
</body>
</html>'
;

// 是不是要加第一行
// $temp2=$firstline.$temp2;
$temp=$temp1.$temp2.$temp3;


return $temp;    
}



	 
     //保存导入数据
    public function save_import($data) {
        // $data=import_excel($filename);
        $db=M('member');

        foreach ($data as $k => $v) {
            if ($k > 1) {
                 pr($v);
                $datatemp['user'] = $v['1'];
                $datatemp['nickname'] = $v['2'];
                $datatemp['password'] = password($v['3']);
                $datatemp['stu_class'] = $v['5'];
                $datatemp['phone'] = $v['6'];
                $datatemp['qq'] = $v['7'];
                $datatemp['wx_id'] = $v['8'];
                $datatemp['email'] = $v['9'];
                $datatemp['department'] = $v['10'];
                
                 
                $data_access['group_id'] =$v['4'];
                // $condition['uid']= $v['0'];
                // $haveuid= $db->where($condition)->find();
                if(empty($v['0'] )){
                    $datauser['user'] = $v['1'];
                    if ($db->where($datauser)->find()){
                        echo  $v['1']." - ".  $v['2']."已存在，新增失败，如要更新，请输入uid.";
                        $result='0';
                    }else{
                        $result = $db->add($datatemp);
                        // echo $result;
                         $data_access['uid'] =$result;
                         $result = M('auth_group_access')->add($data_access);
                        // echo '空';
                        // pr($datatemp);
                    }
                }else{
                     $datatemp['uid'] = $v['0'];
                    $result = $db->save($datatemp);
                    
                    
                     $data_access['uid']=$v['0'];
                     $condition['uid']= $v['0'];
                     M('auth_group_access')->where($condition)->delete();
                     $result = M('auth_group_access')->add($data_access);
                    // echo '非空';
                    //   pr($datatemp);
                }
            }
        }
        if ($result) {
            $num = $db->count();
            $this->success('用户导入成功' . '，现在<span style="color:red">' . $num . '</span>条数据了！,30');
        } else {
            $this->error('用户导入失败',30);
        }
    }  
  
  

 


// 准备弃用
// php
public function phpupload() {
    $ip = $_SERVER['REMOTE_ADDR'];
    $ip_config=json_decode(C('IPCONFIG'),true);
    $result = IpAuth($ip, $ip_config);
    // pr($_FILES);
    if(!$result){
        echo "error\n,IP地址\n不在可访问列表中，\n禁止访问。";
    }else{

     echo "本文件上传时间是：".date("Y-m-d H:i:s");
if (($_FILES["file"]["type"] == "application/vnd.ms-excel")
|| ($_FILES["file"]["type"] == "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")
|| ($_FILES["file"]["type"] == "application/octet-stream"))
{

  if ($_FILES["file"]["error"] > 0)
    {
    echo "Return Code: " . $_FILES["file"]["error"] . "<br />";
    }
  else
    {
    // echo "Upload: " . $_FILES["file"]["name"] . "<br />";
    // echo "Type: " . $_FILES["file"]["type"] . "<br />";
    // echo "Size: " . ($_FILES["file"]["size"] / 1024) . " Kb<br />";
    // echo "Temp file: " . $_FILES["file"]["tmp_name"] . "<br />";

    $path=$_SERVER["DOCUMENT_ROOT"] .'/Uploads/'. $_FILES["file"]["name"];
    // pr($path);
      move_uploaded_file($_FILES["file"]["tmp_name"],$path);
    
    }

    // echo "Stored in: " .$path;


    $data=I('get.');
$this->dealuploadexcel($path,$data);

}
else
  {
  echo "Invalid file";
  }

        
    }    

}





// 处理上传过来的数据
public function dealuploadexcel($filename,$data) {
    // pr($filename,'$filename');
$DBNAME='rwxy';
$DBSHEET='tzcdata';
// $conall=$data['conall'];
$con2=$this->constr2conarr($data,'eq');
// pr($con2);
// pr($data);
unset($con2['conall']);
$wrpw=$con2['wrpw'];
$rpw=$con2['rpw'];
$sheetname=$con2['sheetname'];
$namekey=$con2['namekey'];
$pidkey=$con2['pidkey'];

$classkey=$con2['classkey'];
$orderkey=$con2['orderkey'];
$con2temp=$con2;
unset($con2temp['wrpw']);unset($con2temp['rpw']);unset($con2temp['namekey']);unset($con2temp['pidkey']);
unset($con2temp['sheetname']);unset($con2temp['notfield']);

if(!empty($wrpw) && !empty($sheetname)){  //pw非空再说
$firstlinertwoarr=read_csv_lines($filename,0,1);
$title=$firstlinertwoarr[0];
// pr($title,'$title');
    $lines=get_csv_lines($filename);
    $nowline=0;
    for ($i = 1; $i <= $lines/C('CSVNUM'); $i++) {
        $nowline=($i-1)*C('CSVNUM');
        $csvdata=read_csv_lines($filename,$nowline,C('CSVNUM'));
        $datatwoarr=delemptyfieldtwoarr($csvdata);
        // pr($i.'次读取');
        // pr($datatwoarr,'$csvdata');
        
unset($twoarrexcel);
foreach ($datatwoarr as $key => $dataarr) {
    
    if($i==1 && $key==0){
        
    }else{
        // pr($dataarr,'$dataarr12');
        
            $twoarrkey=$key;
           
            foreach($dataarr as $key2=>$value2){
                // pr($key2,'$key2,每个值');
                $twoarrexcel[$twoarrkey][$title[$key2]]=$value2;
            }
            $twoarrexcel[$twoarrkey]['wrpw']=$wrpw;
            $twoarrexcel[$twoarrkey]['rpw']=$rpw;
            $twoarrexcel[$twoarrkey]['sheetname']=$sheetname;
            // $twoarrexcel[$twoarrkey]['ord']=$twoarrkey;
            $twoarrexcel[$twoarrkey]['custom1']=json_encode($con2temp);
            if(!empty($con2['namekey'])){
                $twoarrexcel[$twoarrkey]['name']=$twoarrexcel[$twoarrkey][$con2['namekey']];
            }
            if(!empty($con2['pidkey'])){
                $twoarrexcel[$twoarrkey]['pid']=$twoarrexcel[$twoarrkey][$con2['pidkey']];
            }
            //  pr($twoarrkey,'$twoarrkey,每个值');
            //  pr($twoarrexcel[$twoarrkey],'$twoarrexcel[$twoarrkey],每个值');
    }
    // $twoarrexcel=delemptyfieldtwoarr($twoarrexcel);
    }
         


    $db=M(C('EXCELSECRETSHEET'));

// 密码与先有的一样才行
$existdatacon['sheetname']=$sheetname;
$existdata=$db->where($existdatacon)->order('id')->find();
// pr($twoarrexcel[2]);
// pr("实际密码是".$existdata['2']['wrpw']."输入密码".$wrpw);
if($existdata['wrpw']==$wrpw || empty($existdata)){
// 把数据表中的数据删了
        if(isset($existdata['sheetname']) ){ //第0行数据库字段名，第1行中文字段名
            
            // 第一次上传就删除所有数据

            if($i==1){
                $delcon['sheetname']=$sheetname;
                $delcon['wrpw']=$wrpw;
                // pr($delcon,'删除条件');
                // pr($db->where($delcon)->count(),'删除前数据个数');
                // $temp222=$db->where($delcon)->select();   
                // $temp222=delemptyfieldtwoarr($temp222);
                // pr($temp222,'要删除的数据');
                // $temp333=$db->select();   
                // $temp333=delemptyfieldtwoarr($temp333);
                // pr($temp333,'原有的数据');                
                
                $db->where($delcon)->delete();   
                $db->where($delcon)->delete();   
                pr($delcon,'删除条件');
                pr($db->where($delcon)->count(),'删除后数据个数');
            }

            
        }else{ $result='sheetname is empty2. or uplosanum';}
        $twoarrexcel=$this->deltextsymboltwoarray($twoarrexcel);
        // pr($twoarrexcel,'$twoarrexcel344');   
        $result=$this->dbadddata($db,$twoarrexcel,$lines);
    }else{ $result='error,password is wrong, or exist other same sheetname.';} 








}

// pr($datatwoarr);
    

    
    // $result=dbadddata($db,$twoarrexcel);
    
}else{ $result="password  or sheetname is empty";}

$con23['sheetname']=$sheetname;
$num23=$db->where($con23)->count();
$result.="【".$sheetname."】现有".$num23."条数据。";
pr($result);    
}


public function dbadddata($db,$datatwoarr,$lines=0) {

// pr(count($datatwoarr),"要写入的数据量是");



$newcout=0;
$newfailcout=0;
foreach($datatwoarr as $key=>$dataarr){
//  reset($dataarr);
//  $id=current($dataarr);
// $dataarr['id']='';
// pr($dataarr);
    $new=$db->data($dataarr)->add(); 
// pr($new);
    if($new>0){
      $newcout++; 
    }else{
      $newfailcout++; 
    }
// echo $key.' '.'新增id值 '.$new.'<br>';
}



// $result='用户成功清空原有数据，并导入' . '<span style="color:red">' . $lines . "</span>条数据了！";
$result='用户成功清空原有数据，并导入数据了！';
return $result;
} 







// 结尾处
}
